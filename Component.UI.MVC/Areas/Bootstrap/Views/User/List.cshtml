@using Component.Model.ViewModel;
@using Component.UI.MVC.Core;
@using Component.ViewModel.WorkFlowViewMoels;
@using Component.ViewModel.DTO;
@using Component.Infrastructure.AttributeExt;
@using Component.Model;
@{
    /**/
    ViewBag.Title = "User List";
    var propertyDict = typeof(UserVM).GetEntityPropertyDict();
    var dictText = propertyDict.ToJson();
}
@model UserQueryRequest

<div class="content-wrapper">
    <div class="content-header clearfix">
        <h4 class="pull-left">
            @ViewBag.Title
        </h4>
        <div class="pull-right btn-group-sm">
            <button class="btn bg-blue btn-normal btn-sm btn-add">
                <i class="fa fa-plus-square"></i>
                新增
            </button>
            <button class="btn bg-blue btn-normal btn-sm btn-edit">
                <i class="fa fa-edit"></i>
                编辑
            </button>
            <button class="btn bg-blue btn-export btn-normal btn-sm">
                <i class="glyphicon glyphicon-export"></i>导出
            </button>
        </div>
    </div>

    <!-- Main content -->
    <div class="content" style="padding-top:0px;">
        <div class="form-horizontal">
            <div class="panel-group">
                <div class="panel panel-success">
                    <form class="query-form">
                        <div class="panel-body">
                            <div class="row">
                                <div class="form-group form-group-sm col-sm-6">
                                    <div class="col-sm-3">
                                        @Html.UILabelFor(x => x.Name)
                                    </div>
                                    <div class="col-sm-9">
                                        @Html.UIEditorFor(x => x.Name)
                                    </div>
                                </div>
                                <div class="form-group form-group-sm col-sm-6">
                                    <div class="col-sm-3">
                                        <div class="label-wrapper"><label class="control-label" for="Name" title="">邮箱</label></div>
                                    </div>
                                    <div class="col-sm-9">
                                        <input class="form-control text-box single-line" id="Name" name="Name" type="text" value="">
                                    </div>
                                </div>
                            </div>
                            <div class="row text-center">
                                <button type="button" style="min-width:100px" class="btn btn-search btn-normal btn-sm btn-primary">查询</button>
                            </div>
                        </div>
                    </form>
                </div>
                <div class="panel panel-success">
                    <div class="panel-body">
                        <div class="col-sm-12 dt-container">
                            <div>
                                <table width="100%" class="data-table table table-bordered table-hover dataTable nowrap">
                                </table>
                            </div>
                        </div>

                    </div>
                </div>
            </div>
        </div>
        <div class="modal-container" style="display:none">
        </div>
    </div>
    <!-- /.content -->
</div>
<script>
    require(["jquery", "dataTables.select.ext", "toastr", "dataTables.bootstrap", "datatables.net-select"], function ($, dtSelectExt, toastr) {
        define('model.opt', ["jquery"], function ($) {
            return {
                success: function () {
                    var container = $('.modal-container');
                    container.find('.modal.fade').modal('hide');
                    toastr.options.positionClass = 'toast-center';
                    toastr.success('提交数据成功');
                    $(".btn-search").click();
                }
            }
        });

        $(document).ready(function () {
            var propertyDict = JSON.parse('@Html.Raw(dictText)');
            var cols = [];

            cols.push({ visible: true, title: "", className: "", orderable: false })
            for (var key in propertyDict) {
                var item = { visible: true, title: propertyDict[key], data: key, className: "cell-" + key, orderable: false };
                if (key == "Id") {
                    item.visible = true;
                }
                cols.push(item)
            }
            var url = '@Url.Action("Query")';
            var dataTable = $('.data-table').DataTable({
                responsive: false,
                serverSide: true,
                autoWidth: true,
                scrollX: true,
                sScrollX: "100%",
                deferRender: true,
                //deferLoading: 0,
                ajax: {
                    url: url,
                    ordering: false,
                    scrollX: true,
                    data: function (data) {
                        // Grab form values containing user options
                        var form = {};
                        var form = $(".query-form").serializeArray();
                        // Add options used by Datatables
                        form.push({ name: "Start", value: data.start });
                        form.push({ name: "Length", value: data.length });
                        form.push({ name: "Draw", value: data.draw });
                        return form;
                    }
                },
                //data: @*@Html.Raw(data)*@,
                //dom: '<"row"<"col-sm-6"l><"col-sm-6"<"toolbar">>><"row"<"col-sm-12">t><"row"<"col-sm-6"i><"col-sm-6"p>>',
                columns:cols,
                columnDefs: [{
                    orderable: false,
                    className: 'select-checkbox',
                    targets: 0,
                    render: function (data, type, row, meta) {
                        return '';
                    }
                }],
                select: {
                    style: 'multi',
                    //items:'cell',
                    //selector: 'td:first-child'

                },
                //select:true,
                rowCallback: function (row, data, dataIndex) {
                    //dataTable.row(row).select();
                    if (data.IsSelected) {
                       
                    }
                }
            });
            dtSelectExt.initSelectAll(dataTable);

            dataTable.on('draw', function () {
                //dataTable.row(':eq(1)').select();
            });
            

            //row click
            dataTable.on('click', 'td', function () {
                var data = dataTable.row($(this).parents('tr')).data();
                var selectRows = dataTable.rows({ selected: true });
                var column = dataTable.column( $(this).index()+':visIdx' );
            });

            $(".btn-search").click(function () {
                dataTable.ajax.reload();
            });

            $('.btn-add').click(function () {
                var url='@Url.Action("CreateOrEdit")'
                $.getRequest(url, function (data) {
                    var container = $('.modal-container');
                    container.empty();
                    container.append(data);
                    container.show();
                    container.find('.modal.fade').modal('show');
                });
            });

            $('.btn-edit').click(function () {
                var rows = dataTable.rows({ selected: true });
                var url = '@Url.Action("CreateOrEdit")'
                $.getRequest(url, function (data) {
                    var container = $('.modal-container');
                    container.empty();
                    container.append(data);
                    container.show();
                    container.find('.modal.fade').modal('show');
                });
            });
           
        });
    });
</script>